
@import org.openmole.site.tools._
@import org.openmole.site._
@import org.openmole.site.stylesheet._
@import DocumentationPages._



@h2{Why explore your model?}

Simulation models are necessarily a simplification of reality, and hypotheses have to be made when developing them.
Thus every model needs to be questioned in order to fully understand the extent of its capabilities:
Is it relevant to tackle the research question behind it?
How to extract significant knowledge from the model?
What kind of dynamics can it exhibit?
How does each mechanism of the model impact those dynamics?
Is every mechanism really necessary?
@br
These are just some of the many questions a model developer has to answer in order to really know and understand his/her model, and OpenMOLE built-in methods are designed to help you answer some of these questions.

@br@br

Simulation models can be abstracted as a program that transforms a set of @b{inputs} into a set of @b{outputs}.

@img(src := Resource.img.method.modelIO.file, width := "40%")

Any type of data can be used as input for simulation models: locally-defined parameters, pictures, CSV files, DB connections, etc.
However, simulation experiments usually revolve around @b{parameter space exploration} (e.g. sensitivity analysis).
@br
Likewise, the outputs generated by simulation experiments are, most of the time, @b{metrics} computed on the dynamics produced by a simulation run (e.g. fitness or error functions).



@h2{OpenMOLE methods}

There are four types of general questions that can be addressed by OpenMOLE methods:

@br@br

@ol
    @li{What are all the possible inputs producing a given output?}
    @ul
        @li{This is a @a("Calibration", href := calibration.file) or optimization problem, solved with genetic algorithms.}
    @br

    @li{How does an input variation affect the output?}
    @ul
        @li{This is addressed by performing a @a("Sensitivity Analysis", href := sensitivity.file).}
    @br

    @li{How do the inputs individually participate to produce the outputs? Is every parameter necessary to produce the outputs? What are the robustness intervals of the inputs that lead to a desired output?}
    @ul
        @li{This is an extension of the sensitivity analysis, it is performed through the @a("Calibration Profiles Algorithm", href := profile.file).}
    @br

    @li{What are all the possible outputs of the model?}
    @ul
        @li{This can be done with the @a("Pattern Space Exploration", href := pse.file) (PSE) method.}


@h3{Methods characteristics}

Each OpenMOLE method is presented with a figure summarizing its performance with regard to a few criteria they all have in common.

@br@br

@Resource.rawFrag(Resource.img.method.legendOfIDs)

@br@br

@b{Nota Bene}: These performance scores are defined relatively to each other and are not absolute values.


@h3{To go further}

@ul
    @li{Calibration methods make an extensive use of @a("Genetic Algorithms", href := geneticAlgorithm.file).}
    @li{Specific tasks are available to handle the @a("stochasticity ", href := stochasticityManagement.file) of your model.}
    @li{@a("Distribution schemes", href := island.file) have been specifically designed for distributed computing environments.}