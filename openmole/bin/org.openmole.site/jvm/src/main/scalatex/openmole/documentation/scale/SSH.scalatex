@import org.openmole.site._
@import org.openmole.site.tools._
@import org.openmole.site.content.Environment._



The @code{SSHEnvironment} makes it possible to delegate tasks to a remote multi-core server through an @aa("SSH", href := shared.link.ssh) connection.

@br@br

You should first provide your @aa("authentication", href := DocumentationPages.gui.file + "#Authentications") information to OpenMOLE to be able to use your batch system.
Then, all that is left is to define is the environment itself.
Here is a use example:

@br@br

@hl.openmole("""
  val env =
    SSHEnvironment(
      "login",
      "machine.domain",
      10 // The number of cores you want to use on the remote server
    )
""")

@br

@provideOptions:
  @ul
    @li{@port,}
    @li{@openMOLEMemory,}
    @li{@threads,}
    @li{@workDirectory,}
    @li{@name.}
    @li{@code{killAfter}: use the timeout command to kill the process after a given time, for exemple killAfter = 24 hours}
