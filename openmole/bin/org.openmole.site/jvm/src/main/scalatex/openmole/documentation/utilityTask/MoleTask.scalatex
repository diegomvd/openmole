
@import org.openmole.site.tools._

A @i{MoleTask} encapsulates a whole workflow in a single task. It may be useful to delegate entire workflow executions to a remote node. Another typical use case is to make your workflows more modular.

@p To encapsulate a workflow in a @i{MoleTask}, simply wrap it in the @i{MoleTask} builder:
@br @hl.openmole("""
// Define tasks t1 and t2
val moleTask = MoleTask(t1 -- t2)

// Delegate the whole workflow execution to an execution environment
moleTask on env
""", header = """
val t1 = EmptyTask()
val t2 = EmptyTask()
val env = LocalEnvironment()""")

@p In that case, the @i{MoleTask}'s inputs are the same as @i{t1}'s and its outputs are the same as @i{t2}'s.